//
//  시각.swift
//  Programmers
//
//  Created by 전민수 on 2023/08/28.
//

// MARK: - 문제 설명
// 시각(page113) 참고

// MARK: - 제한사항
// 시각(page113) 참고

// MARK: - 문제 해결

func numberOfThreeInTime() {
    // MARK: 풀이방법 1

    // "시:분:초"에서 하나의 영역에서 3이 나오는 경우의 수는 15개
    //    0:00:03
    //    0:00:13
    //    0:00:23
    //    0:00:30 ~ 0:00:39
    //    0:00:43
    //    0:00:53
    //    -> 15개

    // 한 시간 단위에서는 초가 15개의 경우중 하나면 분은 60개 가지중 아무거나 다 가능하고,
    // 분의 경우도 그 마찬가지!
    // 따라서 경우의 수는 15 * 60 * 2 가지인데,
    // 여기서 겹치는 경우의 수, 15 * 15를 빼주면, 한 시간에 1685 가지의 경우의 수 존재
    //    0:00:00 ~ 0:59:59 => 15 * 60 * 2 - 15 = 1800 - 15 * 15 = 1575

    // 추가로, 시가 3, 13, 23인 경우는 모든 경우 다 가능하니, 60 * 60
    // 60 * 60 = 3600

    // MARK: 풀이방법 2

    // 사실 더, 간단하게는 입력 예시가 5일때, 출력 예시가 11475여서,
    // 시에 3이 들어가는 경우는 3시밖에 없으니, 3600을 빼면 7875
    // 0시부터 5시까지니, 3시를 제외한 경우의 수는 5가지
    // 이를 5로 나누면, 각 시마다 1575 경우의 수가 존재함을 유추 가능

    let hour = Int(readLine()!)!
    var answer = 0

    for i in 0...hour {
        if [3, 13, 23].contains(i) {
            answer += 3600
        } else {
            answer += 1575
        }
    }

    print(answer)
}
